{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for VM names"
      }
    },
    "vmSizeMaster": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VM Size Master Nodes"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for Storage Account for VHDs"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet",
      "metadata": {
        "description": "Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "salt-subnet",
      "metadata": {
        "description": "Subnet"
      }
    },
    "clientid": {
      "type": "string",
      "metadata": {
        "description": "clientid for service principal"
      }
    },
    "secret": {
      "type": "string",
      "metadata": {
        "description": "secret for service principal"
      }
    },
    "tenantid": {
      "type": "string",
      "metadata": {
        "description": "tenantid for service principal"
      }
    },
    "ingestionkey": {
      "type": "string",
      "metadata": {
        "description": "Ingestion key for LogDNA logging agent"
      }
    }
  },
  "variables": {
    "apiVersion": "2017-06-01",
    "location": "[resourceGroup().location]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "imageSku": "7.2",
    "vmMasterName": "[concat(parameters('vmNamePrefix'), 'vmmaster')]",
    "masterDomainName": "[variables('vmMasterName')]",
    "masterFqdn": "[concat(variables('masterDomainName'),'.',variables('location'),'.cloudapp.azure.com')]",
    "publicIPAddressName": "[concat(variables('vmMasterName'), '-pip')]",
    "publicIPAddressType": "Dynamic",
    "storageName": "[toLower(concat(parameters('storageAccountNamePrefix'), uniqueString(resourceGroup().id)))]",
    "storageAccountType": "Standard_LRS",
    "dataDiskSize": "50",
    "vnetName": "[parameters('virtualNetworkName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "vnetAddressSpace": "10.10.0.0/16",
    "subnetPrefix": "10.10.1.0/24",
    "subnetNameMasterIP": "10.10.1.10",
    "subnetName": "[parameters('subnetName')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",
    "networkInterfaceName": "-nic",
    "scriptBaseUrl": "https://raw.githubusercontent.com/ritazh/azure-saltstack-elasticsearch/master/",
    "saltstackScript": "customext.sh",
    "installScripts": [
      "[concat(variables('scriptBaseUrl'), variables('saltstackScript'))]"
    ]
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmMasterName'), variables('networkInterfaceName'))]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', concat(variables('vmMasterName'), '-nsg'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('vmMasterName'), '-nsg'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('subnetNameMasterIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat(variables('vmMasterName'), '-nsg')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "elasticsearch",
            "properties": {
              "description": "Allow ElasticSearch",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9200",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 201,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmMasterName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualMachines"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmMasterName'), variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeMaster')]"
        },
        "osProfile": {
          "computerName": "[variables('vmMasterName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmMasterName'), variables('networkInterfaceName')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmMasterName'), '/installsaltstack')]",
      "apiVersion": "2017-03-30",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmMasterName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": "[variables('installScripts')]",
          "commandToExecute": "[concat('bash ',variables('saltstackScript'), ' ', parameters('adminUsername'), ' ', parameters('adminPassword'), ' ', variables('storageName'), ' ', variables('vnetName'), ' ', variables('subnetName'), ' ', parameters('clientid'), ' ', parameters('secret'), ' ', parameters('tenantid'), ' ',  concat(variables('vmMasterName'), '-nsg'), ' ', parameters('ingestionkey'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('masterDomainName')]"
        }
      }
    }
  ],
  "outputs": {
    "resource-group-url": {
      "type": "string",
      "value": "[concat('https://ms.portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name)]"
    }
  }
}